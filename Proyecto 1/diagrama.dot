digraph G {node[shape=box, style=filled, color=blanchedalmond]; edge[color=chocolate3];rankdir=UD 

raiz [  shape=circle, style=filled, label ="INICIO"];
raiz ->nodo0_com;nodo0_com [ label ="Comentario /////inicio de la traduccion
"];
nodo0_com ->nodo0_com_m;nodo0_com_m [ label ="Comentario /*
        Primer archivo de entrada para proyecto organizacion de lenguajes y compiladores 1
*/"];
nodo0_com_m ->nodo1_com;nodo1_com [ label ="Comentario //errores lexicos, se tienen que recuperar!
"];
nodo1_com ->nodo2_com;nodo2_com [ label ="Comentario //seccion de declraciones de funciones de variables
"];
nodo2_com ->nodo0_id;nodo0_id [shape=parallelogram, style=filled, label ="NumEro _variable1_ = 5"];
nodo0_id ->nodo3_com;nodo3_com [ label ="Comentario //ERROR sintactico, reportar que falta un punto y coma, recuperarse del error
"];
nodo3_com ->nodo1_id;nodo1_id [shape=parallelogram, style=filled, label ="CadenA _v1_ = 'esta es una cadena'"];
nodo1_id ->nodo2_id;nodo2_id [shape=parallelogram, style=filled, label ="CadenA _v2_ = 'esta es una cadena'"];
nodo2_id ->nodo3_id;nodo3_id [shape=parallelogram, style=filled, label ="CadenA _v3_ = 'esta es una cadena'"];
nodo3_id ->nodo4_id;nodo4_id [shape=parallelogram, style=filled, label ="cadena _curso1_ = 'olc'"];
nodo4_id ->nodo5_id;nodo5_id [shape=parallelogram, style=filled, label ="cadena _curso2_ = 'olc'"];
nodo5_id ->nodo6_id;nodo6_id [shape=parallelogram, style=filled, label ="cadena _curso3_ = 'olc'"];
nodo6_id ->nodo7_id;nodo7_id [shape=parallelogram, style=filled, label ="numero _pi1_ = 3"];
nodo7_id ->nodo8_id;nodo8_id [shape=parallelogram, style=filled, label ="numero _pi2_ = 3.1"];
nodo8_id ->nodo9_id;nodo9_id [shape=parallelogram, style=filled, label ="numero _pi3_ = 3.14"];
nodo9_id ->nodo10_id;nodo10_id [shape=parallelogram, style=filled, label ="numero _pi4_ = 3.141"];
nodo10_id ->nodo11_id;nodo11_id [shape=parallelogram, style=filled, label ="numero _anio1_ = 1"];
nodo11_id ->nodo12_id;nodo12_id [shape=parallelogram, style=filled, label ="numero _anio2_ = 9"];
nodo12_id ->nodo13_id;nodo13_id [shape=parallelogram, style=filled, label ="numero _anio3_ = 4"];
nodo13_id ->nodo14_id;nodo14_id [shape=parallelogram, style=filled, label ="numero _anio4_ = 5"];
nodo14_id ->nodo15_id;nodo15_id [shape=parallelogram, style=filled, label ="numero _variableNeg_ = 5.0"];
nodo15_id ->nodo16_id;nodo16_id [shape=parallelogram, style=filled, label ="cadena _encabezado1_ = 'Universidad San Carlos de Guatemala...;'"];
nodo16_id ->nodo17_id;nodo17_id [shape=parallelogram, style=filled, label ="cadena _encabezado2_ = 'Escuela de Ciencias y Sistemas Segundo semestre '"];
nodo17_id ->nodo18_id;nodo18_id [shape=parallelogram, style=filled, label ="boolean _flag1_ = verdadero"];
nodo18_id ->nodo19_id;nodo19_id [shape=parallelogram, style=filled, label ="boolean _flag2_ = falso"];
nodo19_id ->nodo20_id;nodo20_id [shape=parallelogram, style=filled, label ="caracter _name1_ = 'f'"];
nodo20_id ->nodo21_id;nodo21_id [shape=parallelogram, style=filled, label ="caracter _name2_ = 'e'"];
nodo21_id ->nodo22_id;nodo22_id [shape=parallelogram, style=filled, label ="caracter _name3_ = 'r'"];
nodo22_id ->nodo23_id;nodo23_id [shape=parallelogram, style=filled, label ="caracter _name4_ = 'n'"];
nodo23_id ->nodo24_id;nodo24_id [shape=parallelogram, style=filled, label ="caracter _name6_ = 'n'"];
nodo24_id ->nodo25_id;nodo25_id [shape=parallelogram, style=filled, label ="caracter _name5_ = 'a'"];
nodo25_id ->nodo26_id;nodo26_id [shape=parallelogram, style=filled, label ="caracter _name7_ = '${100}'"];
nodo26_id ->nodo27_id;nodo27_id [shape=parallelogram, style=filled, label ="caracter _name8_ = '${111}'"];
nodo27_id ->nodo28_id;nodo28_id [shape=parallelogram, style=filled, label ="numero _operaciones1Basica_ = 1 + (1)"];
nodo28_id ->nodo4_com;nodo4_com [ label ="Comentario //2 el resultado
"];
nodo4_com ->nodo29_id;nodo29_id [shape=parallelogram, style=filled, label ="numero _operaciones1Basica2_ = _operaciones1Basica_ + _operaciones1Basica_"];
nodo29_id ->nodo5_com;nodo5_com [ label ="Comentario //               
"];
nodo5_com ->nodo30_id;nodo30_id [shape=parallelogram, style=filled, label ="nUmero _operaciones1Intermedia_ = 15 + (9 * 8) + 200 / 8 * 3 + 9"];
nodo30_id ->nodo6_com;nodo6_com [ label ="Comentario //171 el resultado
"];
nodo6_com ->nodo31_id;nodo31_id [shape=parallelogram, style=filled, label ="numeRo _operaciones1Avanzadas1_ = ((15 + 9) * 8 + 200 / 8 * 3 + 9)"];
nodo31_id ->nodo7_com;nodo7_com [ label ="Comentario //291 el resultado
"];
nodo7_com ->nodo32_id;nodo32_id [shape=parallelogram, style=filled, label ="numero _operaciones1Avanzadas2_ = 30 ** [22.2 - 2.2] + (2)"];
nodo32_id ->nodo33_id;nodo33_id [shape=parallelogram, style=filled, label ="nuMero _operaciones1Avanzadas3_ = (30 ** [2]) + (2)"];
nodo33_id ->nodo34_id;nodo34_id [shape=parallelogram, style=filled, label ="numeRo _operaciones1Avanzadas4_ = (30 ** [10 - 8 + 9 - 4 * 2 - 1]) + (2)"];
nodo34_id ->nodo35_id;nodo35_id [shape=parallelogram, style=filled, label ="numeRo _operaciones1Avanzadas6_ = (5 * 8) % (1 + 5 + 6)"];
nodo35_id ->nodo8_com;nodo8_com [ label ="Comentario //4 es el resultado
"];
nodo8_com ->nodo36_id;nodo36_id [shape=parallelogram, style=filled, label ="boolean _operacionRela3_ =  _operaciones1Basica_>8"];
nodo36_id ->nodo37_id;nodo37_id [shape=parallelogram, style=filled, label ="BooLean _operacionRela3_ = (_operaciones1Basica_ + 6)>=8"];
nodo37_id ->nodo38_id;nodo38_id [shape=parallelogram, style=filled, label ="boolean _operacionRela3_ = (_operaciones1Basica_ + 6)<=8"];
nodo38_id ->nodo39_id;nodo39_id [shape=parallelogram, style=filled, label ="booleAn _operacionRela4_ = _operaciones1Basica_==8"];
nodo39_id ->nodo40_id;nodo40_id [shape=parallelogram, style=filled, label ="boolean _operacionRela5_ = _operaciones1Basica_==_operaciones1Basica_"];
nodo40_id ->nodo41_id;nodo41_id [shape=parallelogram, style=filled, label ="Boolean _operacionRela6_ = _operaciones1Basica_==_operaciones1Basica_ + 1"];
nodo41_id ->nodo42_id;nodo42_id [shape=parallelogram, style=filled, label ="boolEan _operacionRela7_ = _operaciones1Basica_==(_operaciones1Basica_) * (8 + 5)"];
nodo42_id ->nodo1_com_m;nodo1_com_m [ label ="Comentario /*otro error lexico************/"];
nodo1_com_m ->nodo9_com;nodo9_com [ label ="Comentario //seccion de asignaciones
"];
nodo9_com ->nodo0_id_as;nodo0_id_as [ label ="_v1_ -> 'esta es la cadena numero 1'"];
nodo0_id_as ->nodo1_id_as;nodo1_id_as [ label ="_v2_ -> 'estas cadenas deben ser diferentes'"];
nodo1_id_as ->nodo2_id_as;nodo2_id_as [ label ="_v3_ -> 'estas cadenas deben ser diferentes'"];
nodo2_id_as ->nodo3_id_as;nodo3_id_as [ label ="_curso1_ -> 'Organizacion de lenguajes y compiladores 1'"];
nodo3_id_as ->nodo4_id_as;nodo4_id_as [ label ="_curso2_ -> 'Organizacion de lenguajes y compiladores 1'"];
nodo4_id_as ->nodo5_id_as;nodo5_id_as [ label ="_curso3_ -> 'Organizacion de lenguajes y compiladores 1'"];
nodo5_id_as ->nodo2_com_m;nodo2_com_m [ label ="Comentario /******error sintactico, le falta la flecha*/"];
nodo2_com_m ->nodo10_com;nodo10_com [ label ="Comentario //otro error lexico
"];
nodo10_com ->nodo0_print;nodo0_print [shape=invhouse, style=filled,  label ="IMPRIMIR _encabezado1_"];
nodo0_print ->nodo1_print;nodo1_print [shape=invhouse, style=filled,  label ="IMPRIMIR _encabezado2_"];
nodo1_print ->nodo2_print;nodo2_print [shape=invhouse, style=filled,  label ="IMPRIMIR '...'"];
nodo2_print ->nodo3_print;nodo3_print [shape=invhouse, style=filled,  label ="IMPRIMIR _anio1_"];
nodo3_print ->nodo4_print;nodo4_print [shape=invhouse, style=filled,  label ="IMPRIMIR _anio2_"];
nodo4_print ->nodo5_print;nodo5_print [shape=invhouse, style=filled,  label ="IMPRIMIR _anio3_"];
nodo5_print ->nodo6_print;nodo6_print [shape=invhouse, style=filled,  label ="IMPRIMIR _anio4_"];
nodo6_print ->nodo7_print;nodo7_print [shape=invhouse, style=filled,  label ="IMPRIMIR '.'"];
nodo7_print ->nodo8_print;nodo8_print [shape=invhouse, style=filled,  label ="IMPRIMIR (_v3_)"];
nodo8_print ->nodo0_si;nodo0_si [ label ="SI "];
nodo0_si ->nodo0_cond_si;nodo0_cond_si [shape=diamond, style=filled, label ="_v1_==_v2_"];
nodo0_cond_si ->nodo9_print;nodo9_print [shape=invhouse, style=filled,  label ="IMPRIMIR 'Al parecer no funciona la asignacion'"];
nodo9_print ->nodo0_mi;nodo0_mi [ label ="MIENTRAS "];
nodo0_mi ->nodo0_cond_mi;nodo0_cond_mi [shape=diamond, style=filled, label =" not (_variable1_>=5 * 5 + 8 / 2)"];
nodo0_cond_mi ->nodo10_print;nodo10_print [shape=invhouse, style=filled,  label ="IMPRIMIR _variable1_"];
nodo10_print ->nodo6_id_as;nodo6_id_as [ label ="_variable1_ -> _variable1_ + 1"];
nodo6_id_as ->nodo0_mi;nodo0_cond_mi ->nodo0_mi_f;nodo0_mi_f [ label ="Fin MIENTRAS "];
nodo0_mi ->nodo0_si_f;nodo0_si_f [ label ="Fin SI "];
nodo0_elsnodo0_els [ label ="ELSE "];
nodo0_si ->nodo1_si;nodo1_si [ label ="SI "];
nodo1_si ->nodo1_cond_si;nodo1_cond_si [shape=diamond, style=filled, label ="_v1_==_v2_"];
nodo1_cond_si ->nodo11_print;nodo11_print [shape=invhouse, style=filled,  label ="IMPRIMIR 'no tiene que imprimir este mensaje'"];
nodo11_print ->nodo12_print;nodo12_print [shape=invhouse, style=filled,  label ="IMPRIMIR 'este print es un ejemplo'"];
nodo12_print ->nodo1_si_f;nodo1_si_f [ label ="Fin SI "];
nodo1_elsnodo1_els [ label ="ELSE "];
nodo1_si ->nodo2_si;nodo2_si [ label ="SI "];
nodo2_si ->nodo2_cond_si;nodo2_cond_si [shape=diamond, style=filled, label ="_v1_==_v2_"];
nodo2_cond_si ->nodo13_print;nodo13_print [shape=invhouse, style=filled,  label ="IMPRIMIR 'no tiene que imprimir este mensaj_______________e'"];
nodo13_print ->nodo2_si_f;nodo2_si_f [ label ="Fin SI "];
nodo2_cond_si ->nodo0_osi;nodo0_osi [ label ="O SI "];
nodo0_osi ->nodo0_cond_osi;nodo0_cond_osi [shape=diamond, style=filled, label ="_v1_==13"];
nodo0_cond_osi ->nodo0_instru_osi [ label ="O SI"];nodo0_instru_osi [ label ="INSTRUCCIONES"];
nodo0_instru_osi ->nodo14_print;nodo14_print [shape=invhouse, style=filled,  label ="IMPRIMIR 'mensaje de prueba'"];
nodo14_print ->nodo0_osi_f;nodo0_osi_f [ label ="Fin O SI "];
nodo0_cond_osi ->nodo1_osi;nodo1_osi [ label ="O SI "];
nodo1_osi ->nodo1_cond_osi;nodo1_cond_osi [shape=diamond, style=filled, label ="_v1_==14"];
nodo1_cond_osi ->nodo1_instru_osi [ label ="O SI"];nodo1_instru_osi [ label ="INSTRUCCIONES"];
nodo1_instru_osi ->nodo15_print;nodo15_print [shape=invhouse, style=filled,  label ="IMPRIMIR 'mensaje de prueba'"];
nodo15_print ->nodo1_osi_f;nodo1_osi_f [ label ="Fin O SI "];
nodo1_cond_osi ->nodo2_elsnodo2_els [ label ="ELSE "];
nodo2_elsnodo2_els ->nodo16_print;nodo16_print [shape=invhouse, style=filled,  label ="IMPRIMIR 'este print es un ejemplo'"];
nodo16_print ->nodo2_els_f;nodo2_els_f [ label ="Fin else "];
nodo2_si ->nodo43_id;nodo43_id [shape=parallelogram, style=filled, label ="Boolean _varB_ = falso"];
nodo43_id ->nodo17_print;nodo17_print [shape=invhouse, style=filled,  label ="IMPRIMIR 'Estas definiendo bien los valores'"];
nodo17_print ->nodo0_se;nodo0_se [ shape=diamond, style=filled, label ="SEGUN _varaux_"];
nodo0_se ->nodo0_caso;nodo0_caso [ shape=diamond, style=filled,  label ="CASO = 0"];
nodo0_caso ->nodo18_print;nodo18_print [shape=invhouse, style=filled,  label ="IMPRIMIR 'el valor es mayor a 2'"];
nodo18_print ->nodo0_caso_f;nodo0_caso_f [ label ="Fin CASO "];
nodo0_caso ->nodo0_se_f;nodo0_se_f [ label ="Fin SEGUN "];
nodo0_se_f ->nodo3_com_m;nodo3_com_m [ label ="Comentario /*Ahora empezamos con las funciones y procedimientos*/"];
nodo3_com_m ->nodo0met;nodo0met [ label ="Metodo _potenciaManual_ con parametros (_base_ Numero,_exponenete_ Numero)"];
nodo0met ->nodo0_instru_met;nodo0_instru_met [ label ="INSTRUCCIONES"];
nodo0_instru_met ->nodo44_id;nodo44_id [shape=parallelogram, style=filled, label ="Numero _i_ = 0"];
nodo44_id ->nodo45_id;nodo45_id [shape=parallelogram, style=filled, label ="Numero _acumulado_ = 0"];
nodo45_id ->nodo0_for;nodo0_for [ label ="PARA _i_ 0"];
nodo0_for ->nodo0_cond_for;nodo0_cond_for [shape=diamond, style=filled, label ="_i_ < _exponente_ - 1"];
nodo0_cond_for ->nodo7_id_as;nodo7_id_as [ label ="_acumulado_ -> _acumulado_ + _acumulado_"];
nodo7_id_as ->nodo0_cond_for;nodo0_cond_for ->nodo0_for_f;nodo0_for_f [ label ="Fin FOR "];
nodo0_for_f ->nodo19_print;nodo19_print [shape=invhouse, style=filled,  label ="IMPRIMIR _acumulado_"];
nodo19_print ->nodo20_print;nodo20_print [shape=invhouse, style=filled,  label ="IMPRIMIR ' Esta es la potencia Manual'"];
nodo20_print ->nodo0_met_f;nodo0_met_f [ label ="Fin Metodo "];
nodo0met ->nodo0_fun;nodo0_fun [ label ="FUNCION _potenciaFuncion_ con parametros (_base_ Numero,_exponente_ Numero)"];
nodo0_fun ->nodo0_instru_fun;nodo0_instru_fun [ label ="INSTRUCCIONES"];
nodo0_instru_fun ->nodo46_id;nodo46_id [shape=parallelogram, style=filled, label ="Numero _potencia_ = _base_ ** [_exponente_]"];
nodo46_id ->nodo0_fun_f;nodo0_fun_f [ label ="Fin funcion _potencia_"];
nodo0_fun ->nodo1met;nodo1met [ label ="Metodo _metodo_ con parametros ()"];
nodo1met ->nodo1_instru_met;nodo1_instru_met [ label ="INSTRUCCIONES"];
nodo1_instru_met ->nodo21_print;nodo21_print [shape=invhouse, style=filled,  label ="IMPRIMIR 'estamos entrando al metodo 1'"];
nodo21_print ->nodo0_eje;nodo0_eje [ label ="Ejecutar _potenciaManual_ con parametros (3 * 1 + 4 / 2,3 + 2)"];
nodo0_eje ->nodo1_met_f;nodo1_met_f [ label ="Fin Metodo "];
nodo1met ->nodo0_eje;nodo0_eje [ label ="Ejecutar _metodo_ con parametros ()"];
nodo0_eje ->fin;fin [  shape=circle, style=filled, label ="FIN"];


}
